{"ast":null,"code":"var _jsxFileName = \"/front_end_public/src/pages/School.jsx\",\n  _s = $RefreshSig$();\nimport Clickable from \"../components/Clickable\";\nimport Error from \"../components/Error\";\nimport \"./page.css\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet School = () => {\n  _s();\n  let [counter, setCounter] = useState(0);\n  let [showModal, setShowModal] = useState(false);\n  let navigate = useNavigate();\n  let handleClick = () => {\n    setCounter(clicks => {\n      return clicks + 1;\n    });\n    setShowModal(showModal => !showModal);\n  };\n  const handleClickCMake = () => {\n    let path = `cmake`;\n    navigate(path);\n  };\n  const handleClickNetworks = () => {\n    let path = `networks`;\n    navigate(path);\n  };\n  let normalMode = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projects\",\n    children: [/*#__PURE__*/_jsxDEV(Clickable, {\n      title: \"CMake\",\n      onClickFun: handleClickCMake\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Clickable, {\n      title: \"Networks\",\n      onClickFun: handleClickNetworks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 22\n  }, this);\n  let errorMode = /*#__PURE__*/_jsxDEV(Error, {\n    onClick: () => {\n      setShowModal(false);\n    },\n    counter: counter\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!showModal && normalMode, showModal && errorMode]\n  }, void 0, true);\n};\n_s(School, \"MQ4lJGdUTWGODL4Q35G0uErKtIY=\", false, function () {\n  return [useNavigate];\n});\n_c = School;\nexport default School;\nvar _c;\n$RefreshReg$(_c, \"School\");","map":{"version":3,"names":["Clickable","Error","useState","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","School","_s","counter","setCounter","showModal","setShowModal","navigate","handleClick","clicks","handleClickCMake","path","handleClickNetworks","normalMode","className","children","title","onClickFun","fileName","_jsxFileName","lineNumber","columnNumber","errorMode","onClick","_c","$RefreshReg$"],"sources":["/front_end_public/src/pages/School.jsx"],"sourcesContent":["import Clickable from \"../components/Clickable\"\nimport Error from \"../components/Error\";\nimport \"./page.css\"\nimport { useState } from \"react\"\nimport { useNavigate } from \"react-router-dom\";\n\n\nlet School = () => {\n    let [counter, setCounter] = useState(0);\n    let [showModal, setShowModal] = useState(false);\n    let navigate = useNavigate();\n\n    let handleClick = () => {\n        setCounter((clicks) => { return clicks + 1 });\n        setShowModal(showModal => !showModal);\n    };\n\n    const handleClickCMake = () => {\n        let path = `cmake`;\n        navigate(path);\n    }\n\n    const handleClickNetworks = () => {\n        let path = `networks`;\n        navigate(path);\n    }\n\n    let normalMode = <div className=\"projects\">\n        <Clickable title=\"CMake\"  onClickFun={handleClickCMake} />\n        <Clickable title=\"Networks\" onClickFun={handleClickNetworks} />\n    </div>;\n\n    let errorMode = <Error onClick={() => { setShowModal(false) }} counter={counter} />\n\n    return (<>\n        {!showModal && normalMode}\n        {showModal && errorMode}\n    </>)\n};\n\nexport default School;"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAO,YAAY;AACnB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAG/C,IAAIC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,IAAI,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACvC,IAAI,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC/C,IAAIY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE5B,IAAIY,WAAW,GAAGA,CAAA,KAAM;IACpBJ,UAAU,CAAEK,MAAM,IAAK;MAAE,OAAOA,MAAM,GAAG,CAAC;IAAC,CAAC,CAAC;IAC7CH,YAAY,CAACD,SAAS,IAAI,CAACA,SAAS,CAAC;EACzC,CAAC;EAED,MAAMK,gBAAgB,GAAGA,CAAA,KAAM;IAC3B,IAAIC,IAAI,GAAG,OAAO;IAClBJ,QAAQ,CAACI,IAAI,CAAC;EAClB,CAAC;EAED,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAC9B,IAAID,IAAI,GAAG,UAAU;IACrBJ,QAAQ,CAACI,IAAI,CAAC;EAClB,CAAC;EAED,IAAIE,UAAU,gBAAGf,OAAA;IAAKgB,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACtCjB,OAAA,CAACL,SAAS;MAACuB,KAAK,EAAC,OAAO;MAAEC,UAAU,EAAEP;IAAiB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1DvB,OAAA,CAACL,SAAS;MAACuB,KAAK,EAAC,UAAU;MAACC,UAAU,EAAEL;IAAoB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC;EAEN,IAAIC,SAAS,gBAAGxB,OAAA,CAACJ,KAAK;IAAC6B,OAAO,EAAEA,CAAA,KAAM;MAAEjB,YAAY,CAAC,KAAK,CAAC;IAAC,CAAE;IAACH,OAAO,EAAEA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAEnF,oBAAQvB,OAAA,CAAAE,SAAA;IAAAe,QAAA,GACH,CAACV,SAAS,IAAIQ,UAAU,EACxBR,SAAS,IAAIiB,SAAS;EAAA,eACzB,CAAC;AACP,CAAC;AAACpB,EAAA,CA/BED,MAAM;EAAA,QAGSL,WAAW;AAAA;AAAA4B,EAAA,GAH1BvB,MAAM;AAiCV,eAAeA,MAAM;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}